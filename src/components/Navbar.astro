---
// Navigation Component
// Responsive navigation bar with mobile menu support
const currentPath = Astro.url.pathname;

const navItems = [
  { name: 'Home', href: '/' },
  { name: 'About', href: '/about' },
  { name: 'Skills', href: '/skills' },
  { name: 'Experience', href: '/experience' },
  { name: 'Research', href: '/research' },
  { name: 'Projects', href: '/projects' },
  { name: 'Contact', href: '/contact' },
];
---

<nav class="bg-white dark:bg-gray-800 shadow-lg sticky top-0 z-50 transition-colors duration-300">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between h-16">
      <!-- Logo/Name -->
      <div class="flex items-center">
        <a href="/" class="text-xl font-bold text-gray-900 dark:text-white hover:text-primary-600 dark:hover:text-primary-400 transition-colors">
          Jawand Singh
        </a>
      </div>
      
      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-8">
        {navItems.map((item) => (
          <a
            href={item.href}
            class={`px-3 py-2 rounded-md text-sm font-medium transition-colors ${
              currentPath === item.href
                ? 'text-primary-600 dark:text-primary-400 bg-primary-50 dark:bg-primary-900/20'
                : 'text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-50 dark:hover:bg-gray-700'
            }`}
          >
            {item.name}
          </a>
        ))}
        
        <!-- Dark Mode Toggle -->
        <button
          id="theme-toggle"
          class="p-2 rounded-md text-gray-500 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors"
          aria-label="Toggle dark mode"
        >
          <svg class="w-5 h-5 dark:hidden" fill="currentColor" viewBox="0 0 20 20">
            <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
          </svg>
          <svg class="w-5 h-5 hidden dark:block" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd"></path>
          </svg>
        </button>
      </div>
      
      <!-- Mobile menu button -->
      <div class="md:hidden flex items-center">
        <button
          id="mobile-menu-button"
          class="inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary-500"
          aria-controls="mobile-menu"
          aria-expanded="false"
        >
          <span class="sr-only">Open main menu</span>
          <!-- Menu icon -->
          <svg class="block h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
          <!-- Close icon -->
          <svg class="hidden h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile menu -->
  <div class="md:hidden hidden" id="mobile-menu">
    <div class="px-2 pt-2 pb-3 space-y-1 bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700">
      {navItems.map((item) => (
        <a
          href={item.href}
          class={`block px-3 py-2 rounded-md text-base font-medium transition-colors ${
            currentPath === item.href
              ? 'text-primary-600 dark:text-primary-400 bg-primary-50 dark:bg-primary-900/20'
              : 'text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-50 dark:hover:bg-gray-700'
          }`}
        >
          {item.name}
        </a>
      ))}
    </div>
  </div>
</nav>

<script>
  // Dark mode toggle functionality
  function initTheme() {
    const themeToggle = document.getElementById('theme-toggle');
    const htmlElement = document.documentElement;
    
    // Check for saved theme preference or default to 'light'
    const savedTheme = localStorage.getItem('theme') || 'light';
    htmlElement.classList.toggle('dark', savedTheme === 'dark');
    
    themeToggle?.addEventListener('click', () => {
      const isDark = htmlElement.classList.contains('dark');
      const newTheme = isDark ? 'light' : 'dark';
      
      htmlElement.classList.toggle('dark', newTheme === 'dark');
      localStorage.setItem('theme', newTheme);
    });
  }
  
  // Mobile menu toggle functionality
  function initMobileMenu() {
    const button = document.getElementById('mobile-menu-button');
    const menu = document.getElementById('mobile-menu');
    const menuIcon = button?.querySelector('svg:first-child');
    const closeIcon = button?.querySelector('svg:last-child');
    
    button?.addEventListener('click', () => {
      const isOpen = !menu?.classList.contains('hidden');
      
      menu?.classList.toggle('hidden', isOpen);
      menuIcon?.classList.toggle('hidden', !isOpen);
      closeIcon?.classList.toggle('hidden', isOpen);
      button.setAttribute('aria-expanded', (!isOpen).toString());
    });
  }
  
  // Initialize on page load
  document.addEventListener('DOMContentLoaded', () => {
    initTheme();
    initMobileMenu();
  });
  
  // Re-initialize on navigation (for SPA-like behavior)
  document.addEventListener('astro:page-load', () => {
    initTheme();
    initMobileMenu();
  });
</script>

<style>
  /* Ensure smooth transitions for theme changes */
  html {
    transition: background-color 0.3s ease, color 0.3s ease;
  }
  
  /* Custom primary color variables */
  :root {
    --color-primary-50: rgb(239 246 255);
    --color-primary-100: rgb(219 234 254);
    --color-primary-400: rgb(96 165 250);
    --color-primary-500: rgb(59 130 246);
    --color-primary-600: rgb(37 99 235);
    --color-primary-900: rgb(30 58 138);
  }
  
  .text-primary-400 {
    color: var(--color-primary-400);
  }
  
  .text-primary-600 {
    color: var(--color-primary-600);
  }
  
  .bg-primary-50 {
    background-color: var(--color-primary-50);
  }
  
  .dark .bg-primary-900\/20 {
    background-color: rgb(30 58 138 / 0.2);
  }
  
  .hover\:text-primary-400:hover {
    color: var(--color-primary-400);
  }
  
  .hover\:text-primary-600:hover {
    color: var(--color-primary-600);
  }
  
  .focus\:ring-primary-500:focus {
    --tw-ring-color: var(--color-primary-500);
  }
</style>
